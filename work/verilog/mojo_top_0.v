/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip,
    input p1enter,
    input [4:0] p1colours,
    input p2enter,
    input [4:0] p2colours,
    output reg [2:0] p1indicator,
    output reg [2:0] p2indicator,
    output reg [4:0] roundlights
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_edge_detector_1_out;
  reg [1-1:0] M_edge_detector_1_in;
  edge_detector_1 edge_detector_1 (
    .clk(clk),
    .in(M_edge_detector_1_in),
    .out(M_edge_detector_1_out)
  );
  wire [1-1:0] M_edge_detector_2_out;
  reg [1-1:0] M_edge_detector_2_in;
  edge_detector_1 edge_detector_2 (
    .clk(clk),
    .in(M_edge_detector_2_in),
    .out(M_edge_detector_2_out)
  );
  wire [1-1:0] M_edge_detector_3_out;
  reg [1-1:0] M_edge_detector_3_in;
  edge_detector_1 edge_detector_3 (
    .clk(clk),
    .in(M_edge_detector_3_in),
    .out(M_edge_detector_3_out)
  );
  wire [1-1:0] M_edge_detector_4_out;
  reg [1-1:0] M_edge_detector_4_in;
  edge_detector_1 edge_detector_4 (
    .clk(clk),
    .in(M_edge_detector_4_in),
    .out(M_edge_detector_4_out)
  );
  wire [1-1:0] M_edge_detector_5_out;
  reg [1-1:0] M_edge_detector_5_in;
  edge_detector_1 edge_detector_5 (
    .clk(clk),
    .in(M_edge_detector_5_in),
    .out(M_edge_detector_5_out)
  );
  wire [1-1:0] M_edge_detector_6_out;
  reg [1-1:0] M_edge_detector_6_in;
  edge_detector_1 edge_detector_6 (
    .clk(clk),
    .in(M_edge_detector_6_in),
    .out(M_edge_detector_6_out)
  );
  wire [1-1:0] M_edge_detector_7_out;
  reg [1-1:0] M_edge_detector_7_in;
  edge_detector_1 edge_detector_7 (
    .clk(clk),
    .in(M_edge_detector_7_in),
    .out(M_edge_detector_7_out)
  );
  wire [1-1:0] M_edge_detector_8_out;
  reg [1-1:0] M_edge_detector_8_in;
  edge_detector_1 edge_detector_8 (
    .clk(clk),
    .in(M_edge_detector_8_in),
    .out(M_edge_detector_8_out)
  );
  wire [1-1:0] M_edge_detector_9_out;
  reg [1-1:0] M_edge_detector_9_in;
  edge_detector_1 edge_detector_9 (
    .clk(clk),
    .in(M_edge_detector_9_in),
    .out(M_edge_detector_9_out)
  );
  wire [1-1:0] M_edge_detector_10_out;
  reg [1-1:0] M_edge_detector_10_in;
  edge_detector_1 edge_detector_10 (
    .clk(clk),
    .in(M_edge_detector_10_in),
    .out(M_edge_detector_10_out)
  );
  wire [1-1:0] M_edge_detector_11_out;
  reg [1-1:0] M_edge_detector_11_in;
  edge_detector_1 edge_detector_11 (
    .clk(clk),
    .in(M_edge_detector_11_in),
    .out(M_edge_detector_11_out)
  );
  wire [1-1:0] M_edge_detector_12_out;
  reg [1-1:0] M_edge_detector_12_in;
  edge_detector_1 edge_detector_12 (
    .clk(clk),
    .in(M_edge_detector_12_in),
    .out(M_edge_detector_12_out)
  );
  wire [1-1:0] M_button_cond_1_out;
  reg [1-1:0] M_button_cond_1_in;
  button_conditioner_13 button_cond_1 (
    .clk(clk),
    .in(M_button_cond_1_in),
    .out(M_button_cond_1_out)
  );
  wire [1-1:0] M_button_cond_2_out;
  reg [1-1:0] M_button_cond_2_in;
  button_conditioner_13 button_cond_2 (
    .clk(clk),
    .in(M_button_cond_2_in),
    .out(M_button_cond_2_out)
  );
  wire [1-1:0] M_button_cond_3_out;
  reg [1-1:0] M_button_cond_3_in;
  button_conditioner_13 button_cond_3 (
    .clk(clk),
    .in(M_button_cond_3_in),
    .out(M_button_cond_3_out)
  );
  wire [1-1:0] M_button_cond_4_out;
  reg [1-1:0] M_button_cond_4_in;
  button_conditioner_13 button_cond_4 (
    .clk(clk),
    .in(M_button_cond_4_in),
    .out(M_button_cond_4_out)
  );
  wire [1-1:0] M_button_cond_5_out;
  reg [1-1:0] M_button_cond_5_in;
  button_conditioner_13 button_cond_5 (
    .clk(clk),
    .in(M_button_cond_5_in),
    .out(M_button_cond_5_out)
  );
  wire [1-1:0] M_button_cond_6_out;
  reg [1-1:0] M_button_cond_6_in;
  button_conditioner_13 button_cond_6 (
    .clk(clk),
    .in(M_button_cond_6_in),
    .out(M_button_cond_6_out)
  );
  wire [1-1:0] M_button_cond_7_out;
  reg [1-1:0] M_button_cond_7_in;
  button_conditioner_13 button_cond_7 (
    .clk(clk),
    .in(M_button_cond_7_in),
    .out(M_button_cond_7_out)
  );
  wire [1-1:0] M_button_cond_8_out;
  reg [1-1:0] M_button_cond_8_in;
  button_conditioner_13 button_cond_8 (
    .clk(clk),
    .in(M_button_cond_8_in),
    .out(M_button_cond_8_out)
  );
  wire [1-1:0] M_button_cond_9_out;
  reg [1-1:0] M_button_cond_9_in;
  button_conditioner_13 button_cond_9 (
    .clk(clk),
    .in(M_button_cond_9_in),
    .out(M_button_cond_9_out)
  );
  wire [1-1:0] M_button_cond_10_out;
  reg [1-1:0] M_button_cond_10_in;
  button_conditioner_13 button_cond_10 (
    .clk(clk),
    .in(M_button_cond_10_in),
    .out(M_button_cond_10_out)
  );
  wire [1-1:0] M_button_cond_11_out;
  reg [1-1:0] M_button_cond_11_in;
  button_conditioner_13 button_cond_11 (
    .clk(clk),
    .in(M_button_cond_11_in),
    .out(M_button_cond_11_out)
  );
  wire [1-1:0] M_button_cond_12_out;
  reg [1-1:0] M_button_cond_12_in;
  button_conditioner_13 button_cond_12 (
    .clk(clk),
    .in(M_button_cond_12_in),
    .out(M_button_cond_12_out)
  );
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_25 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [3-1:0] M_roundmanager_p1indicator;
  wire [3-1:0] M_roundmanager_p2indicator;
  wire [5-1:0] M_roundmanager_roundlights;
  wire [16-1:0] M_roundmanager_debug;
  reg [5-1:0] M_roundmanager_p1colours;
  reg [1-1:0] M_roundmanager_p1enter;
  reg [5-1:0] M_roundmanager_p2colours;
  reg [1-1:0] M_roundmanager_p2enter;
  roundmanager_26 roundmanager (
    .clk(clk),
    .rst(rst),
    .p1colours(M_roundmanager_p1colours),
    .p1enter(M_roundmanager_p1enter),
    .p2colours(M_roundmanager_p2colours),
    .p2enter(M_roundmanager_p2enter),
    .p1indicator(M_roundmanager_p1indicator),
    .p2indicator(M_roundmanager_p2indicator),
    .roundlights(M_roundmanager_roundlights),
    .debug(M_roundmanager_debug)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = {8'h00, M_roundmanager_debug[8+7-:8], M_roundmanager_debug[0+7-:8]};
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_button_cond_1_in = p1enter;
    M_edge_detector_1_in = ~M_button_cond_1_out;
    M_roundmanager_p1enter = M_edge_detector_1_out;
    M_button_cond_2_in = p1colours[0+0-:1];
    M_edge_detector_2_in = ~M_button_cond_2_out;
    M_roundmanager_p1colours[0+0-:1] = M_edge_detector_2_out;
    M_button_cond_3_in = p1colours[1+0-:1];
    M_edge_detector_3_in = ~M_button_cond_3_out;
    M_roundmanager_p1colours[1+0-:1] = M_edge_detector_3_out;
    M_button_cond_4_in = p1colours[2+0-:1];
    M_edge_detector_4_in = ~M_button_cond_4_out;
    M_roundmanager_p1colours[2+0-:1] = M_edge_detector_4_out;
    M_button_cond_5_in = p1colours[3+0-:1];
    M_edge_detector_5_in = ~M_button_cond_5_out;
    M_roundmanager_p1colours[3+0-:1] = M_edge_detector_5_out;
    M_button_cond_6_in = p1colours[4+0-:1];
    M_edge_detector_6_in = ~M_button_cond_6_out;
    M_roundmanager_p1colours[4+0-:1] = M_edge_detector_6_out;
    M_button_cond_7_in = p2enter;
    M_edge_detector_7_in = ~M_button_cond_7_out;
    M_roundmanager_p2enter = M_edge_detector_7_out;
    M_button_cond_8_in = p2colours[0+0-:1];
    M_edge_detector_8_in = ~M_button_cond_8_out;
    M_roundmanager_p2colours[0+0-:1] = M_edge_detector_8_out;
    M_button_cond_9_in = p2colours[1+0-:1];
    M_edge_detector_9_in = ~M_button_cond_9_out;
    M_roundmanager_p2colours[1+0-:1] = M_edge_detector_9_out;
    M_button_cond_10_in = p2colours[2+0-:1];
    M_edge_detector_10_in = ~M_button_cond_10_out;
    M_roundmanager_p2colours[2+0-:1] = M_edge_detector_10_out;
    M_button_cond_11_in = p2colours[3+0-:1];
    M_edge_detector_11_in = ~M_button_cond_11_out;
    M_roundmanager_p2colours[3+0-:1] = M_edge_detector_11_out;
    M_button_cond_12_in = p2colours[4+0-:1];
    M_edge_detector_12_in = ~M_button_cond_12_out;
    M_roundmanager_p2colours[4+0-:1] = M_edge_detector_12_out;
    p1indicator = M_roundmanager_p1indicator;
    p2indicator = M_roundmanager_p2indicator;
    roundlights = M_roundmanager_roundlights;
  end
endmodule
