module alu_bool16 (
        input a[16],
        input b[16],
        input alufn[6],
        output bool[16]
    ) {
    always {
        case (alufn[3:0]) {
            b1000:
                bool = a & b; // AND
                
            b1110:
                bool = a | b; // OR
                
            b0110:
                bool = a ^ b; // XOR
                
            b1010:
                bool = a; // "A" (returns the value of A)
            
            b1100:
                bool = b; // "B" (returns the value of B)

            b0001:
                bool = ~a & ~b; // NOR

            b0111:
                bool = ~a | ~b; // NAND
            
            b1111:
                bool = 16hffff; // returns 1 regardless
        
            default:
                bool = 16h0000; // returns 0 regardless
            }
        }
}